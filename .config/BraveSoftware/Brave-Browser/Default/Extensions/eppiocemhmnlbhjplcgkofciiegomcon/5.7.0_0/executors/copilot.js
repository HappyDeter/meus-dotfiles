(()=>{const x=(()=>{const x=sessionStorage.getItem("bis_data");if(null!==x){return JSON.parse(x)}return null})(),$=x?.config?`${x.id}_t`:null,v=x?.config?.aiMessagesConfig?.COPILOT||{},{PARSERS:C=[],CHATBOT_NAME:D=""}=v;ParserProcessors={WS:function(x){const $=window.WebSocket;window.WebSocket=class extends ${#x=!1;#$="";#v=null;constructor($,v){super($,v),super.addEventListener("message",($=>{try{const{MESSAGE_LIMIT:v=3e4,EVENT_TYPE_QUERY:C=[],START_EVENT_TYPE:D,APPEND_EVENT_TYPE:p,DONE_EVENT_TYPE:K,CONVERSATION_ID_QUERY:Z=[],TEXT_QUERY:O=[]}=x.RECEIVED_MESSAGE||{},U=$.data||"{}",G=JSON.parse(U),w=V(C,G);w===D&&this.#C(Z,G),this.#x&&w===p&&this.#D(O,G),w===K&&this.#V(v)}catch(x){}}))}send($){try{const{MESSAGE_LIMIT:v=1e4,EVENT_TYPE_QUERY:C=[],EVENT_TYPE:D,CONVERSATION_ID_QUERY:K=[],CONTENT_QUERY:Z=[],CONTENT_TYPE_QUERY:O=[],CONTENT_TYPE_TEXT:U,CONTENT_TEXT_QUERY:G=[]}=x.SEND_MESSAGE||{},w=JSON.parse($),M=V(C,w),_=V(Z,w),e=V(K,w);if(M!==D)return super.send($);const u=_.find((x=>V(O,x)===U));if(!u)return super.send($);const z=V(G,u);z&&e&&p(z,v,e)}catch(x){}return super.send($)}#C(x,$){this.#x=!0,this.#v=V(x,$)}#D(x,$){this.#$=this.#$+V(x,$)}#V(x){p(this.#$,x,this.#v,"system"),this.#x=!1,this.#$="",this.#v=null}}}};const V=(x,$)=>x.reduce(((x,$)=>x?"object"==typeof x?x[$]:x:null),$),p=(x,$,v,C)=>{if(x&&v){const D=K(x,$,v,C);D&&Z(D)}},K=function(x,$,v,C="user"){return{chatbotName:D,messageType:C,sessionId:v,messageLength:x.length,messageText:x.trim().slice(0,$)}},Z=x=>{try{let v={posdMessageId:"PANELOS_MESSAGE",posdHash:(Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)).substring(0,22),type:"COPILOT_DATA",from:$,to:$.substring(0,$.length-2),content:x};window.postMessage(v)}catch(x){}};for(let x of C)x.USE&&ParserProcessors[x.TYPE](x)})();